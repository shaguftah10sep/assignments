1. SQL query to fetch unique values of “city” from “customers” table using the alias name as “CUSTOMER_CITY”?

SELECT DISTINCT city AS CUSTOMER_CITY FROM customers;




2. SQL query to print all details of employees, excluding those with first names “Gerard” and “Mary”:

SELECT * 
FROM employees 
WHERE firstName NOT IN ('Gerard', 'Mary');


3. SQL query to print full name as concatenation of first and last name of employees whose last name ends with ‘n’:

select concat(firstName, ' ', lastName) AS fullName 
from employees 
where lastName LIKE '%n';


4.SQL query to print all details of employees located in offices within territory “EMEA”:

SELECT * 
FROM employees e
JOIN offices o ON e.officeCode = o.officeCode
WHERE o.territory = 'EMEA';

5. SQL query to fetch the number of employees for each territory. Sort by the number of employees in descending order:

SELECT o.territory, COUNT(e.employeeNumber) AS no_of_employees
FROM employees e
JOIN offices o ON e.officeCode = o.officeCode
GROUP BY o.territory
ORDER BY no_of_employees DESC;


6. SQL query to print “productName” from “products” table next to the corresponding “textDescription” with alias “productLine” from the “productlines” table, ordered by “productLine” Ascending and “productName” Descending.

SELECT p.productName, pl.textDescription AS productLine
FROM products p
JOIN productlines pl ON p.productLine = pl.productLine
ORDER BY pl.productLine ASC, p.productName DESC;

7.SQL query to print top 5 products with the highest total quantity sold in April 2005. Quantities should also be displayed:

SELECT p.productName, SUM(od.quantityOrdered) AS total_quantity_sold
FROM products p
JOIN orderdetails od ON p.productCode = od.productCode
JOIN orders o ON od.orderNumber = o.orderNumber
WHERE o.orderDate BETWEEN '2005-04-01' AND '2005-04-30'
GROUP BY p.productName
ORDER BY total_quantity_sold DESC
LIMIT 5;


8. SQL query to print total revenue (calculated as “quantityOrdered” * “priceEach”) along with product names for all products in the database, including those where no sales were registered (display revenue as 0 in such cases):

SELECT p.productName, IFNULL(SUM(od.quantityOrdered * od.priceEach), 0) AS total_revenue
FROM products p
LEFT JOIN orderdetails od ON p.productCode = od.productCode
GROUP BY p.productName;
